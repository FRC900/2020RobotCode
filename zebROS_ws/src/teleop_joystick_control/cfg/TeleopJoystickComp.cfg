#!/usr/bin/env python
PACKAGE = "teleop_joystick_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("joystick_deadzone",             double_t, 0, "Joystick deadzone, in percent",                                   0, 0,  1)
gen.add("min_speed",                     double_t, 0, "Min linear speed to get robot to overcome friction, in m/s",      0, 0, 10)
gen.add("max_speed",                     double_t, 0, "Max linear speed, in m/s",                                        0, 0, 10)
gen.add("max_speed_slow",                double_t, 0, "Max linear speed in slow mode, in m/s",                           0, 0, 10)
gen.add("max_rot",                       double_t, 0, "Max angular speed",                                               0, 0, 10)
gen.add("max_rot_slow",                  double_t, 0, "Max angular speed in slow mode",                                  0, 0, 10)
gen.add("joystick_pow",                  double_t, 0, "Joystick Scaling Power, linear",                                  0, 0, 10)
gen.add("rotation_pow",                  double_t, 0, "Joystick Scaling Power, rotation",                                0, 0, 10)
gen.add("limit_switch_debounce_iterations", int_t,    0, "How many matching reads needed before believing line break data", 0, 0, 20)
gen.add("linebreak_debounce_iterations", int_t,    0, "How many matching reads needed before believing line break data", 0, 0, 20)
gen.add("drive_rate_limit_time",         double_t, 0, "msec to go from full back to full forward",                       0, 0, 1000)
gen.add("rotate_rate_limit_time",         double_t, 0, "msec to go from full counterclockwise to full clockwise",                       0, 0, 1000)
gen.add("climber_align_angle",         double_t, 0, "Target heading for the robot to align with the climber bar",                       0, 0, 6.283185)
gen.add("climber_time_lock",             double_t, 0, "How much time shoud be left in match before we can climb",        0, 0,  135)
gen.add("trigger_threshold",         double_t, 0, "Amount trigger has to be pressed",                       0, 0, 6.283185)
gen.add("stick_threshold",         double_t, 0, "Amount stick has to be pressed",                       0, 0, 6.283185)
gen.add("climber_percent_out",             double_t, 0, "Percent out of the climber winch",                                   0, 0, 1)
gen.add("control_panel_increment",             double_t, 0, "Number of rotations to increment the control panel",                                   0, 0, 1)
gen.add("shooter_turret_offset_rate",             double_t, 0, "Speed to change turret offset in radians/second",                                   0, 0, 0.1666)
gen.add("shooter_speed_offset_rate",             double_t, 0, "Acceleration to change turret offset in radians/second^2",                                   0, 0, 50)
gen.add("climber_percent_out_up",             double_t, 0, "Percent out of the climber winch while running up",                                   -1, 0, 1)
gen.add("climber_percent_out_down",             double_t, 0, "Percent out of the climber winch while running down",                                   -1, 0, 1)

exit(gen.generate(PACKAGE, "teleop_joystick_control", "TeleopJoystickComp"))
