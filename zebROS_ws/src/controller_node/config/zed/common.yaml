# params/common_yaml
# Common parameters to Stereolabs ZED and ZED mini cameras
---
# Dynamic parameters cannot have a namespace
brightness:                 0                                   # Dynamic
contrast:                   4                                   # Dynamic
hue:                        6                                   # Dynamic
saturation:                 4                                   # Dynamic
sharpness:                  3                                   # Dynamic
auto_exposure_gain:         false                               # Dynamic
gain:                       10                                  # Dynamic - works only if `auto_exposure_gain` is false
exposure:                   20                                  # Dynamic - works only if `auto_exposure_gain` is false
auto_whitebalance:          true                                # Dynamic
whitebalance_temperature:   50                                  # Dynamic - works only if `auto_whitebalance` is false
confidence:                 97                                  # Dynamic
mat_resize_factor:          1.0                                 # Dynamic
point_cloud_freq:           15.0                                # Dynamic - frequency of the pointcloud publishing (equal or less to `frame_rate` value)

general:
    camera_flip:                false 
    zed_id:                     0
    serial_number:              0
    resolution:                 2                                   # '0': HD2K, '1': HD1080, '2': HD720, '3': VGA
    frame_rate:                 60
    gpu_id:                     -1
    base_frame:                 'base_link'                         # must be equal to the frame_id used in the URDF file
    camera_frame:               'zed_camera_center'                 # must be equal to the frame_id used in the URDF file
    left_camera_frame:          'zed_left_camera_frame'             # must be equal to the frame_id used in the URDF file
    left_camera_optical_frame:  'zed_left_camera_optical_frame'     # must be equal to the frame_id used in the URDF file
    right_camera_frame:         'zed_right_camera_frame'            # must be equal to the frame_id used in the URDF file
    right_camera_optical_frame: 'zed_right_camera_optical_frame'    # must be equal to the frame_id used in the URDF file
    verbose:                    true
    svo_compression:            4                                   # `0`: RAW (no compression), `1`: LOSSLESS (PNG/ZSTD), `2`: LOSSY (JPEG), `3`: AVCHD (H264 SDK v2.7), `4`: HEVC (H265 SDK v2.7)
    self_calib:                 true                                # enable/disable self calibration at starting

video:
    color_enhancement:          true                                # This parameter enhances color spreading on R/G/B channel and increase gamma correction on black areas for a better gray segmentation in black areas. Recommended for computer's vision applications.

depth:
    quality:                    1                                   # '0': NONE, '1': PERFORMANCE, '2': MEDIUM, '3': QUALITY, '4': ULTRA
    sensing_mode:               0                                   # '0': STANDARD, '1': FILL
    depth_stabilization:        1                                   # `0`: disabled, `1`: enabled
    openni_depth_mode:          0                                   # '0': 32bit float meters, '1': 16bit uchar millimeters

pos_tracking:
    publish_tf:                 false                               # publish `odom -> base_link` TF
    publish_map_tf:             false                               # publish `map -> odom` TF
    world_frame:                'map'                               # the reference fixed frame (same as `map_frame` or `odometry_frame`)
    map_frame:                  'map'
    odometry_frame:             'odom'
    odometry_db:                ''
    spatial_memory:             true                                # Enable to detect loop closure
    floor_alignment:            false                               # Enable to automatically calculate camera/floor offset
    initial_base_pose:          [0.0,0.0,0.0, 0.0,0.0,0.0]          # [X, Y, Z, R, P, Y]
    publish_pose_covariance:    true                                # Enable to publish the `pose_with_covariance` message
    fixed_covariance:           false                               # Set the covariance for pose and odometry to a diagonal matrix with `fixed_cov_value` on the diagonal
    fixed_cov_value:            1e-6                                # Value used on the diagonal of the fixed covariance matrix (`fixed_covariance -> true`)
    odometry_topic:             'odom'
    init_odom_with_first_valid_pose: true                           # Enable to initialize the odometry with the first valid pose
    path_pub_rate:              2.0                                 # Path positions punlishing frequency
    path_max_count:             -1                                  # use '-1' for unlimited path size
    two_d_mode:                 false                               # Force navigation on a plane. If true the Z value will be fixed to "fixed_z_value", roll and pitch to zero
    fixed_z_value:              0.00                                # Value to be used for Z coordinate if `two_d_mode` is true

mapping:
    mapping_enabled:            false                               # True to enable mapping and fused point cloud pubblication
    resolution:                 0                                   # `0`: HIGH, `1`: MEDIUM, `2`: LOW
    fused_pointcloud_freq:      1.0                                 # frequency of the publishing of the fused colored point cloud

