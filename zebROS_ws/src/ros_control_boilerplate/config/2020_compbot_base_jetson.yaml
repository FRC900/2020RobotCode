# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 100
  cycle_time_error_threshold: 0.01
    #some processes have lower frequencies than the main control loop
  robot_iteration_hz: 20
  joystick_read_hz: 50
  match_data_read_hz: 2
  robot_controller_read_hz: 20


# Settings for ros_control hardware interface
# Map a name for each valid joint to a CAN id
# For future expansion, change hw_id to specify one
# of several types of HW interface : CAN_id, PWM_id, DIO_id, AIO_id, etc.
hardware_interface:
   # Identify this as a non-Rio controller using Linux
   # socketCan device can0 to communicate
   run_hal_robot: false
   can_interface: can0
    
   joints:
       #TODO: Get config values of joints
       - {name: turret_joint, type: can_talon_srx, can_id: 30, local: true}

       - {name: intake_arm_joint, type: solenoid, local_hardware: false, local_update: true}
       - {name: intake_joint, type: can_talon_srx, can_id: 33, local: true}

       - {name: shooter_joint, type: can_talon_srx, can_id: 32, local: true}
       - {name: shooter_hood_joint, type: solenoid, local_hardware: false, local_update: true}

       - {name: climber_winch_joint, type: can_talon_srx, can_id: 0, local: true} #TODO fix can id
       - {name: climber_deploy_joint, type: double_solenoid, local_hardware: false, local_update: true}
       - {name: climber_elevator_brake_joint, type: solenoid, local_hardware: false, local_update: true}
       - {name: indexer_joint, type: can_talon_srx, can_id: 67, local: true} #TODO find actual can id

       - {name: control_panel_arm_joint, type: solenoid, local_hardware: false, local_update: true}
       - {name: control_panel_joint, type: can_talon_srx, can_id: 34, local: true}
       
       - {name: elevator_master, type: can_talon_srx, can_id: 41, local: true}
       - {name: elevator_follower1, type: can_talon_srx, can_id: 42, local: true}
       - {name: elevator_follower2, type: can_talon_srx, can_id: 43, local: true}
       - {name: elevator_follower3, type: can_talon_srx, can_id: 44, local: true}

       - {name: fl_drive, type: can_talon_srx, can_id: 21, local: true}
       - {name: fl_angle, type: can_talon_srx, can_id: 11, local: true}
       - {name: fr_drive, type: can_talon_srx, can_id: 22, local: true}
       - {name: fr_angle, type: can_talon_srx, can_id: 12, local: true}
       - {name: br_drive, type: can_talon_srx, can_id: 24, local: true}
       - {name: br_angle, type: can_talon_srx, can_id: 14, local: true}
       - {name: bl_drive, type: can_talon_srx, can_id: 23, local: true}
       - {name: bl_angle, type: can_talon_srx, can_id: 13, local: true}
       - {name: pdp, type: pdp}
       - {name: compressor, type: compressor, pcm_id: 0}

       - {name: panel_claw, type: solenoid, local_hardware: false, local_update: true}
       - {name: panel_push_extend, type: solenoid, local_hardware: false, local_update: true}

       - {name: panel_intake_limit_switch_1, type: digital_input, local: false}
       - {name: panel_intake_limit_switch_2, type: digital_input, local: false}
       - {name: panel_intake_limit_switch_3, type: digital_input, local: false}
       - {name: panel_intake_limit_switch_4, type: digital_input, local: false}

       - {name: cargo_intake_linebreak_1, type: digital_input, local: false}

       - {name: climber_linebreak_1, type: digital_input, local: false}
       - {name: climber_linebreak_2, type: digital_input, local: false}

       - {name: robot_code_ready_jetson, local: true, type: ready}
       - {name: robot_code_ready_rio, local: false, type: ready} # Probably not really needed?
         
# Create controllers for each joint
#
# Entry is the name of the controller. It can be anything.  
# It will create a namespace with that name under the main
# controller namespace. Subscribed topics for that controller
# will be most often show up under 
# <top level controller manager ns>/<controller ns>/topic
# e.g.
# /frcrobot/joint1_talon_controller/command
# /frcrobot/joint2_talon_controller/command
# /frcrobot/talon_states

#Set up controllers for main robot mechanisms
intake_controller:
        type: intake_controller/IntakeController
        intake_joint: "intake"
        intake:
                joint: intake_joint
                type: talon_controllers/TalonPercentOutputController
                invert_output: False

control_panel_controller:
        type: control_panel_controller/ControlPanelController
        control_panel_diameter: 32 #inches
        wheel_diameter: 4 #inches, compliant wheel
        control_panel_joint: "control_panel"
        control_panel:
                joint: control_panel_joint
                type: talon_controllers/TalonMotionMagicCloseLoopController
                feedback_type: CTRE_MagEncoder_Absolute
                close_loop_values:
                    - {p: 0.0, i: 0.000, d: 0.0, f: 0.0, i_zone: 0}
                invert_output: true 
                sensor_phase: false
                peak_output_forward: 1.0
                peak_output_reverse: -1.0
                nominal_output_forward: 0.0
                nominal_output_reverse: 0.0
                motion_cruise_velocity: 3
                motion_acceleration: 10
                voltage_compensation_enable: True
                dynamic_reconfigure: True


shooter_controller:
    type: shooter_controller/ShooterController
    shooter_joint: "shooter"
    shooter:
        joint: shooter_joint
        type: talon_controllers/TalonVelocityCloseLoopController
        feedback_type: CTRE_MagEncoder_Absolute
        close_loop_values:
            - {p: 2.0, i: 0.002, d: 0.0, f: 1.0, i_zone: 0}
        invert_output: true
        sensor_phase: false
        peak_output_forward: 1.0
        peak_output_reverse: -1.0
        nominal_output_forward: 0.0
        nominal_output_reverse: 0.0
        voltage_compensation_enable: true
        dynamic_reconfigure: True

climber_controller:
    type:  climber_controller_2020/ClimberController
    winch_joint: "winch"
    winch:
        joint: climber_winch_joint
        type: talon_controllers/TalonMotionMagicCloseLoopController
        feedback_type: CTRE_MagEncoder_Absolute
        close_loop_values:
            - {p: 0.0, i: 0.000, d: 0.0, f: 0.0, i_zone: 0}
        invert_output: true
        sensor_phase: false
        peak_output_forward: 1.0
        peak_output_reverse: -1.0
        nominal_output_forward: 0.0
        nominal_output_reverse: 0.0
        motion_cruise_velocity: 3
        motion_acceleration: 5
        voltage_compensation_enable: True
        dynamic_reconfigure: True

indexer_controller:
    type:  indexer_controller/IndexerController
    indexer_joint: "indexer"
    indexer_speed: 2.0
    indexer:
        joint: indexer_joint
        type: talon_controllers/TalonVelocityCloseLoopControllerInterface
        feedback_type: CTRE_MagEncoder_Absolute
        close_loop_values:
            - {p: 0.0, i: 0.000, d: 0.0, f: 0.0, i_zone: 0}
        invert_output: true
        sensor_phase: false
        peak_output_forward: 1.0
        peak_output_reverse: -1.0
        nominal_output_forward: 0.0
        nominal_output_reverse: 0.0
        voltage_compensation_enable: True
        dynamic_reconfigure: True

        
turret_controller:
    type: turret_controller/TurretController

    turret_joint: 'turret'

    turret:
        type: talon_controllers/TalonMotionMagicCloseLoopController
        joint: turret_joint
        feedback_type: CTRE_MagEncoder_Absolute
        close_loop_values:
            - {p: 0.0, i: 0.000, d: 0.0, f: 0.0, i_zone: 0} #not tuned
        invert_output: true
        sensor_phase: false
        peak_output_forward: 1.0
        peak_output_reverse: -1.0
        nominal_output_forward: 0.0
        nominal_output_reverse: 0.0
        motion_cruise_velocity: 20
        motion_acceleration: 100
        voltage_compensation: true
        dynamic_reconfigure: true
        limit_switch_local_forward_source: "FeedbackConnector"
        limit_switch_local_forward_normal: "NormallyOpen"
        limit_switch_local_reverse_source: "FeedbackConnector"
        limit_switch_local_reverse_normal: "NormallyOpen"
        softlimit_forward_threshold: 1.0 #Placeholder value
        softlimit_forward_enable: true
        softlimit_reverse_threshold: -1.0 #Placeholder value
        softlimit_reverse_enable: true 

# This one creates the /talon_states topic necessary in ROS
# It doesn't actually control anything, just takes the internal
# encoder state used by the hw manager and publishes it as
# a ROS topic.  This is generic ROS stuff, so we'll have
# to figure out what to map e.g. effort to in the Talon world
talon_state_controller_jetson:
   type:         talon_state_controller/TalonStateController
   publish_rate: 100
talon_config_controller:
   type:         talon_config_controller/TalonConfigController
   publish_rate: 5

# Similar to above, but this one prints non-Talon state
# (stuff that fits into the more standard ROS position/
# speed/effort paradigm)
joint_state_controller_jetson:
   type:         joint_state_controller/JointStateController
   publish_rate: 100

# Used to listen for remote joint states published from the given topic
# (in this case the Rio) and copy them to internal copies of 
# joint data
joint_state_listener_controller:
    type:      state_listener_controller/JointStateListenerController
    topic:     /frcrobot_rio/joint_states

pdp_state_controller:
   type:         pdp_state_controller/PDPStateController
   publish_rate: 20

pcm_state_controller:
   type:         pcm_state_controller/PCMStateController
   publish_rate: 20

match_state_listener_controller:
    type:      state_listener_controller/MatchStateListenerController
    topic:     /frcrobot_rio/match_data

# These controllers are defined for testing indivudal motors 
# but are not actually used for normal swerve drive control
# TODO Sensor phase default for angle motors is good
fl_drive_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: fl_drive
    invert: true
    feedback_type: CTRE_MagEncoder_Relative
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

fl_angle_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: fl_angle
    feedback_type: CTRE_MagEncoder_Absolute
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

fr_drive_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: fr_drive
    invert: true
    feedback_type: CTRE_MagEncoder_Relative
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

fr_angle_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: fr_angle
    feedback_type: CTRE_MagEncoder_Absolute
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

bl_drive_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: bl_drive
    invert: true
    feedback_type: CTRE_MagEncoder_Relative
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

bl_angle_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: bl_angle
    feedback_type: CTRE_MagEncoder_Absolute
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

br_drive_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: br_drive
    invert: true
    feedback_type: CTRE_MagEncoder_Relative
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

br_angle_percentout_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: br_angle
    feedback_type: CTRE_MagEncoder_Absolute
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

fl_angle_position_controller:
    type: talon_controllers/TalonPositionCloseLoopController
    joint: fl_angle
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 4.2, i: 0.006, d: 45.0, f: 0.47, i_zone: 500}
        - {p: 7.5, i: 0.000, d: 00, f: 0.0, i_zone: 0}
    dynamic_reconfigure: True
    voltage_compensation_Enable: True

# ANGLE MOTION MAGIC CONTROLLERS

fr_angle_motionmagic_controller:
    type: talon_controllers/TalonMotionMagicCloseLoopController
    joint: fr_angle
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 2.0, i: 0.002, d: 0.0, f: 1.0, i_zone: 0}
    invert_output: true 
    sensor_phase: false
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

fl_angle_motionmagic_controller:
    type: talon_controllers/TalonMotionMagicCloseLoopController
    joint: fl_angle
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 2.0, i: 0.002, d: 0.0, f: 1.0, i_zone: 0}
    invert_output: true 
    sensor_phase: false
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

br_angle_motionmagic_controller:
    type: talon_controllers/TalonMotionMagicCloseLoopController
    joint: br_angle
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 2.0, i: 0.002, d: 0.0, f: 1.0, i_zone: 0}
    invert_output: true  
    sensor_phase: false
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

bl_angle_motionmagic_controller:
    type: talon_controllers/TalonMotionMagicCloseLoopController
    joint: bl_angle
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 2.0, i: 0.002, d: 0.0, f: 1.0, i_zone: 0}
    invert_output: true
    sensor_phase: false
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

# DRIVE POSITION CONTROLLERS
fr_drive_position_controller:
    type: talon_controllers/TalonPositionCloseLoopController
    joint: fr_drive 
    feedback_type: CTRE_MagEncoder_Relative
    close_loop_values:
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
    invert_output: true
    sensor_phase: true
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

fl_drive_position_controller:
    type: talon_controllers/TalonPositionCloseLoopController
    joint: fl_drive 
    feedback_type: CTRE_MagEncoder_Relative
    close_loop_values:
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
    invert_output: true
    sensor_phase: true
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

br_drive_position_controller:
    type: talon_controllers/TalonPositionCloseLoopController
    joint: br_drive 
    feedback_type: CTRE_MagEncoder_Relative
    close_loop_values:
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
    invert_output: true
    sensor_phase: true
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True

bl_drive_position_controller:
    type: talon_controllers/TalonPositionCloseLoopController
    joint: bl_drive 
    feedback_type: CTRE_MagEncoder_Relative
    close_loop_values:
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
        - {p: 0.0, i: 0.0, d: 0.0, f: 0.0, i_zone: 0}
    invert_output: true
    sensor_phase: true
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 32
    motion_acceleration: 150
    voltage_compensation_enable: true
    dynamic_reconfigure: True
        


elevator_master_percent_output_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: elevator_master
    feedback_type: CTRE_MagEncoder_Relative
    sensor_phase: True
    invert_output: False 
    # TODO : bottom limit switch config
    limit_switch_local_reverse_source: "FeedbackConnector"
    limit_switch_local_reverse_normal: "NormallyOpen"
    conversion_factor: 0.02959

    # TODO : figure out what value this should be
    # Only need one direction, to
    # prevent the elevator from running off the top
    softlimit_forward_threshold: 1.6675558772
    softlimit_forward_enable: True
    
    
elevator_master_velocity_controller:
    type: talon_controllers/TalonVelocityCloseLoopController    
    joint: elevator_master
    feedback_type: CTRE_MagEncoder_Absolute
    close_loop_values:
        - {p: 0.0, i: 0.000, d: 00.0, f: 0.00, i_zone: 000}
    invert_output: False
    sensor_phase: True 
    peak_output_forward: 1.0
    peak_output_reverse: -1.0
    conversion_factor: 0.02959
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 00
    motion_acceleration: 000
    voltage_compensation_enable: true
    dynamic_reconfigure: true
    softlimit_forward_threshold: 1.6675558772
    softlimit_forward_enable: True

elevator_follower1_controller:
    type: talon_controllers/TalonFollowerController
    joint: elevator_follower1 
    feedback_type: CTRE_MagEncoder_Absolute
    invert_output: False
    follow_joint: elevator_master

elevator_follower2_controller:
    type: talon_controllers/TalonFollowerController
    joint: elevator_follower2 
    feedback_type: CTRE_MagEncoder_Absolute
    invert_output: True 
    follow_joint: elevator_master

elevator_follower3_controller:
    type: talon_controllers/TalonFollowerController
    joint: elevator_follower3
    feedback_type: CTRE_MagEncoder_Absolute
    invert_output: True
    follow_joint: elevator_master
